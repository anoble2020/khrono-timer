name: Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip release]')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcap-dev build-essential python3-dev
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build project
      run: npm run build
      
    - name: Generate changelog
      id: changelog
      run: |
        # Get commits since last tag
        if git describe --tags --abbrev=0 >/dev/null 2>&1; then
          LAST_TAG=$(git describe --tags --abbrev=0)
          echo "## Changes since $LAST_TAG" > CHANGELOG.md
          git log --oneline --no-merges $LAST_TAG..HEAD >> CHANGELOG.md
        else
          echo "## Initial Release" > CHANGELOG.md
          git log --oneline --no-merges >> CHANGELOG.md
        fi
        
        # Extract version from package.json
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.changelog.outputs.version }}
        release_name: Release v${{ steps.changelog.outputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

  ios-release:
    runs-on: macos-latest
    needs: release
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install system dependencies (macOS)
      run: |
        brew install libpcap
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build web app
      run: npm run build
      
    - name: Setup Capacitor iOS
      run: |
        npx cap copy ios
        cd ios/App
        pod install --repo-update
        
    - name: Build iOS Archive
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace -scheme App -configuration Release -archivePath App.xcarchive archive
        
    - name: Export iOS Archive
      run: |
        cd ios/App
        xcodebuild -exportArchive -archivePath App.xcarchive -exportPath ./build -exportOptionsPlist ExportOptions.plist
        
    - name: Upload iOS Build
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: ios/App/build/
